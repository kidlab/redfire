<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:v="com.salesbuilder.view.*" 
	xmlns:m="com.salesbuilder.model.*" 
	xmlns:dv="com.salesbuilder.dataviz.*"  
	icon="@Embed('/assets/icon_account.png')"
	verticalGap="0"
	creationComplete="initComp()">
	
	<mx:Script>
		<![CDATA[
			import com.salesbuilder.model.Account;

		import mx.controls.Label;
		import mx.events.IndexChangedEvent;

		private var selectedOption:Label;

		[Bindable]
		private var _account:Account;

		public function set account(account:Account):void
		{
			_account = account;
			label = account.accountId>0?account.name:"New Customer";
		}

		private function initComp():void
		{
			selectedOption = labels[0];
			selectedOption.setStyle('fontWeight', 'bold');	
		}

		private function viewStackchangeHandler(event:IndexChangedEvent):void 
		{
			if (vs.selectedIndex == 3 && !(vs.selectedChild as HistoryChart).activated)
			{
				// For better overall performance, we load stock history data only if and when corresponding tab is selected
				(vs.selectedChild as HistoryChart).activate(_account.ticker);
			}	
			else if (vs.selectedIndex == 4 && !(vs.selectedChild as AccountNews).activated)
			{
				// For better overall performance, we load stock history data only if and when corresponding tab is selected
				(vs.selectedChild as AccountNews).activate(_account.ticker);
			}	
		}
		
		private function optionMouseOver(event:MouseEvent):void
		{
			if (event.currentTarget != selectedOption)
			{
				Label(event.currentTarget).setStyle('color', '#666666');
				Label(event.currentTarget).setStyle('fontWeight', 'bold');	
			}
		}

		private function optionMouseOut(event:MouseEvent):void
		{
			if (event.currentTarget != selectedOption)
			{
				Label(event.currentTarget).setStyle('color', '#000000');
				Label(event.currentTarget).setStyle('fontWeight', 'normal');	
			}
		}

		private function optionMouseDown(event:MouseEvent):void
		{
			if (event.currentTarget != selectedOption)
			{
				if (selectedOption)
				{
					selectedOption.setStyle('color', '#000000');
					selectedOption.setStyle('fontWeight', 'normal');	
				}
				selectedOption = event.currentTarget as Label;
				Label(event.currentTarget).setStyle('color', '#000000');
				Label(event.currentTarget).setStyle('fontWeight', 'bold');	
				vs.selectedIndex = Label(event.currentTarget).repeaterIndex;
			}
		}
			
		]]>
	</mx:Script>

	<mx:HBox backgroundColor="#EBEBEB" height="28" width="100%" paddingTop="6" paddingLeft="8">
		<mx:Repeater id="options" dataProvider="{vs.getChildren()}">
			<mx:Label id="labels" text="{options.currentItem.label}" creationComplete="Label(event.currentTarget).width = Label(event.currentTarget).width + 10"
				mouseDown="optionMouseDown(event)"
				mouseOver="optionMouseOver(event)"
				mouseOut="optionMouseOut(event)"/>
		</mx:Repeater>
	</mx:HBox>	

	<mx:HRule bottom="0" width="100%" height="1" strokeColor="#B9B9B9"/>

	<mx:ViewStack id="vs" width="100%" height="100%" change="viewStackchangeHandler(event)">
		<v:AccountInfo id="info" account="{_account}"/>
		<v:AccountContacts label="Contacts" account="{_account}"/>
		<v:AccountOpportunities label="Transfers" account="{_account}"/>
		<dv:HistoryChart label="History"/>
		<v:AccountNews label="News"/>
	</mx:ViewStack>
	
</mx:VBox>
